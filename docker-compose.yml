version: "3.8"

# networks:
#   default:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.16.1.0/24

services:
  # Контейнер с базой данных
  db:
    # container_name: node_db
    image: "postgres:14.9-alpine"
    restart: always
    ports:
         - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
      - strapi
    volumes:
      - db:/var/lib/postgresql/data

  # Контейнер с pgAdmin
  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: user@mail.com
  #     PGADMIN_DEFAULT_PASSWORD: password
  #   ports:
  #     - 5050:80

  # nginx прокси сервер с поддержкой SSL
  # nginx:
  #   depends_on:
  #     - api
  #     - client
  #   restart: always
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./var/log/nginx:/var/log/nginx
  #     #- ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./nginx/defaultLocal.conf:/etc/nginx/conf.d/default.conf # для теста на localhost
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot

  # Контейнер Certbot для генерации SSL
  # certbot:
  #   image: certbot/certbot
  #   depends_on:
  #     - nginx
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   command: certonly --webroot --webroot-path=/var/www/certbot --email fond178@gmail.com --staging  -d kupicontoru.ru -d www.kupicontoru.ru -->

  # Контейнер для клиент-приложения
  client:
    build:
      context: ../onstock-client
      dockerfile: ../dev-config/Dockerfile.client.dev
    ports:
      - "3000:3000"
    volumes:
      - ../onstock-client:/usr/app
    networks:
      - strapi

    # Контейнер для server-приложения
  cms:
    depends_on:
      - db
    restart: unless-stopped
    build:
      context: ../onstock-cms
      dockerfile: ../dev-config/Dockerfile.cms.dev
    ports:
      - "1337:1337"
    volumes:
      - ../onstock-cms:/usr/app
      - /usr/app/node_modules
    environment:
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
    networks:
      - strapi

networks:
  strapi:

volumes:
  db:

